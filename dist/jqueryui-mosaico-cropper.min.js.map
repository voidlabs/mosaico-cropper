{"version":3,"file":"jqueryui-mosaico-cropper.min.js","sources":["../src/js/url-adapters.js","../src/js/crop-model.js","../src/js/jqueryui-mosaico-cropper.js"],"sourcesContent":["// src/js/url-adapters.js\n\n// Definizione delle dipendenze\nconst _urlParserPatterns = {\n    encodedUrlOriginal: '[^ &\\\\?]+',\n    width: '[0-9]+',\n    height: '[0-9]+',\n    resizeWidth: '[0-9]+',\n    resizeHeight: '[0-9]+',\n    offsetX: '[0-9]+',\n    offsetY: '[0-9]+',\n    cropWidth: '[0-9]+',\n    cropHeight: '[0-9]+',\n    cropX: '[0-9]+',\n    cropY: '[0-9]+',\n    cropX2: '[0-9]+',\n    cropY2: '[0-9]+',\n};\n\nconst methods = [ 'original', 'resize', 'cover', 'cropresize', 'resizecrop' ];\n\nfunction _urlParser(pattern, customPatterns, url) {\n    var matchNames = [];\n    var regex = new RegExp('^'+pattern.replace(/\\\\.|(\\((?!\\?[!:=]))|\\{([^:\\}]+)(?::([^\\}]+))?\\}/g, function(match, braket, groupName, subPattern, offset, input_string) {\n        // console.log(\"X\", match, braket, groupName, subPattern, offset, input_string);\n        if (braket) {\n            // existing regex match\n            matchNames.push('');\n            return match;\n        } else if (groupName) {\n            // named group\n            matchNames.push(groupName);\n            if (!subPattern) {\n                if (_urlParserPatterns[groupName]) subPattern = _urlParserPatterns[groupName];\n                else if (customPatterns !== undefined && customPatterns[groupName]) subPattern = customPatterns[groupName];\n            }\n            if (subPattern) {\n                // deal with sub patterns matching groups\n                subPattern.replace(/\\\\.|(\\((?!\\?[!:=]))/g, function(innerMatch, innerBraket) {\n                    if (innerBraket) matchNames.push('');\n                    return match;\n                });\n                return '('+subPattern+')';\n            // encodedUrlOriginal may not have \"http://\" prefix\n            }\n            // else if (_urlParserPatterns[groupName]) return '('+_urlParserPatterns[groupName]+')';\n            // else if (customPatterns !== undefined && customPatterns[groupName]) return '('+customPatterns[groupName]+')';\n            else {\n                console.error(pattern, url, customPatterns);\n                throw \"Uknown token \"+groupName+\", please use {\"+groupName+\":regex} or use a known pattern\";\n            }\n        } else {\n            // escaped char\n            return match;\n        }\n    })+'$');\n\n    var res = url.match(regex);\n\n    var matches = null;\n    if (res !== null) {\n        if (res.length !== matchNames.length + 1) {\n            // TODO improve error reporting\n            console.log(\"ERROR parsing image url according to pattern!\", pattern, matchNames, res);\n        }\n        matches = {};\n        for (var i = 0; i < matchNames.length; i++) {\n            if (matchNames[i] !== '' && res[i+1] !== undefined) {\n                matches[matchNames[i]] = res[i+1];\n            }\n        }\n    }\n    // console.log(\"p\", matches, pattern, url, matchNames, regex);\n    return matches;\n}\n\nfunction _stringTemplate(string, obj) {\n    // if a token is in the {token:something} format, then \":something\" is completely ignored\n    return string.replace(/\\{([^[\\}:]+)(?::[^\\}]+)?\\}/g, function(match, contents, offset, input_string) {\n        if (obj.hasOwnProperty(contents)) {\n            return obj[contents] !== undefined ? obj[contents] : '';\n        } else {\n            return match;\n        }\n    });\n}\n\n// Definizione delle funzioni principali (rendile 'export function')\nexport function urlAdapterFromSrc(urlAdapter, urlData, src) {\n  var fromSrc = urlAdapter.fromSrc;\n  if (typeof fromSrc == 'object') {\n      var toSrc = urlAdapter.toSrc;\n      var patterns = [];\n      for (var p in toSrc) if (toSrc.hasOwnProperty(p)) {\n          // escaping regexp special chars, excluding {} that we use for tokens.\n          patterns.push(toSrc[p].replace(/[.*+?^$()|[\\]\\\\]/g, '\\\\$&'));\n      }\n      var composedPattern = \"(\"+patterns.join(\"|\")+\")\";\n      var origFromSrc = fromSrc;\n      fromSrc = _urlParser.bind(undefined, composedPattern, origFromSrc);\n  }\n  if (typeof fromSrc == 'string') {\n      fromSrc = _urlParser.bind(undefined, fromSrc, undefined);\n  }\n  var urlAdapterResult = fromSrc(src);\n\n  if (!urlAdapterResult) {\n    if (urlAdapter.defaultPrefix !== undefined) {\n        urlData.urlOriginal = src;\n        urlData.urlPrefix = urlAdapter.defaultPrefix;\n        urlData.urlPostfix = src;\n    } else {\n        // TODO handle bad parameters, log it and fails the initialization!\n        console.error(\"FAILED PARSING\", src);\n    }\n  } else if (urlAdapterResult.encodedUrlOriginal) {\n    urlAdapterResult.urlOriginal = decodeURIComponent(urlAdapterResult.encodedUrlOriginal);\n  }\n\n  return urlAdapterResult;\n}\n\nexport function urlAdapterToSrc(urlAdapter, urlData, res) {\n\n    // TODO TEMP\n    // console.log(\"computedSize\", res.method, res._scale, res);\n\n    res.urlPrefix = urlData.urlPrefix;\n    res.urlPostfix = urlData.urlPostfix;\n    res.urlOriginal = urlData.urlOriginal;\n    res.encodedUrlOriginal = encodeURIComponent(urlData.urlOriginal);\n\n    var toSrc = urlAdapter.toSrc;\n    if (typeof toSrc == 'object') {\n        for (var i = methods.indexOf(res.method); i < methods.length; i++) {\n            if (typeof toSrc[methods[i]] !== 'undefined') {\n                toSrc = toSrc[methods[i]];\n                // console.log(\"Using method \"+methods[i]+\" for original method \"+res.method+\":\", toSrc);\n                break;\n            }\n        }\n    }\n    if (typeof toSrc == 'string') {\n        toSrc = _stringTemplate.bind(undefined, toSrc);\n        // console.log(\"Mapping method string to function\", toSrc);\n    }\n    return toSrc(res);\n}","/**\n * CropModel - Gestisce lo stato del modello di cropping separato dalla UI\n */\nexport class CropModel {\n    constructor(options = {}, originalImageSize) {\n        if (!originalImageSize) {\n            throw new Error('CropModel requires originalImageSize parameter');\n        }\n        \n        this.state = {\n            container: { left: 0, top: 0 },\n            crop: { width: 0, height: 0 },\n            scale: 1,\n            minScale: 0\n        };\n        this.originalImageSize = originalImageSize;\n        this.options = options;\n        this.listeners = {};\n    }\n\n    /** EVENT SYSTEM **/\n    \n    on(event, callback) {\n        if (!this.listeners[event]) {\n            this.listeners[event] = [];\n        }\n        this.listeners[event].push(callback);\n    }\n\n    emit(event, data) {\n        if (this.listeners[event]) {\n            this.listeners[event].forEach(callback => callback(data));\n        }\n    }\n\n    /** GETTERS **/\n\n    getCropHeight() {\n        return this.state.crop.height;\n    }\n\n    getScale() {\n        return this.state.scale;\n    }\n\n    getMaxScale() {\n        if (typeof this.options.maxScale !== 'undefined') return this.options.maxScale;\n        else return 2;\n    }\n\n    getScaledImageSize(scale) {\n        return {\n            width: Math.round(this.originalImageSize.width * (scale || this.state.scale)),\n            height: Math.round(this.originalImageSize.height * (scale || this.state.scale))\n        };\n    }\n\n    /** UTILITIES **/\n\n    checkRange(value, min, max) {\n        if (value < min) return min;\n        if (value > max) return max;\n        return value;\n    }\n\n    /** PURE CALCULATIONS **/\n\n    getCurrentComputedMethod() {\n        return this.getCurrentComputedSizes().method;\n    }\n\n    getCurrentComputedSizes() {\n        var scaledSize = this.getScaledImageSize();\n\n        var width = scaledSize.width,\n            height = scaledSize.height,\n            scale = this.state.scale;\n\n        var l = -this.state.container.left,\n            r = width - this.state.crop.width + this.state.container.left,\n            t = -this.state.container.top,\n            b = height - this.state.crop.height + this.state.container.top;\n\n        // TODO should get this from an option, but maybe not the way \n        var ppp = 1;\n        if (typeof this.options.ppp !== 'undefined') ppp = this.options.ppp;\n        // TODO we should support non integer ppps too.\n        if (ppp * scale > 1) ppp = Math.ceil(1 / scale);\n\n        var res = {\n            resizeWidth: Math.round(width * ppp),\n            resizeHeight: Math.round(height * ppp),\n            offsetX: Math.round(Math.max(0, -this.state.container.left) * ppp),\n            offsetY: Math.round(Math.max(0, -this.state.container.top) * ppp),\n            cropX: Math.max(0, Math.round(l / scale)),\n            cropY: Math.max(0, Math.round(t / scale)),\n            cropWidth: Math.round(this.state.crop.width / scale),\n            cropHeight: Math.round(this.state.crop.height / scale),\n            width: Math.round(this.state.crop.width * ppp),\n            height: Math.round(this.state.crop.height * ppp),\n            _scale: scale\n        };\n\n        res.cropX2 = res.cropX + res.cropWidth;\n        res.cropY2 = res.cropY + res.cropHeight;\n\n        var dx = Math.abs(l-r),\n            dy = Math.abs(t-b);\n\n        res.method = this.options.resizeWidth !== undefined ? 'resizecrop' : 'cropresize';\n        if (dx <= 1 && dy <= 1 && (l === 0 || t === 0)) {\n            if (l === 0 && t === 0) res.method = scale !== 1 ? 'resize' : 'original';\n            else res.method = 'cover';\n        }\n\n        return res;\n    }\n\n    /** MODEL UPDATE METHODS **/\n\n    updateScale(newScale, xp, yp) {\n        var scaledSize = this.getScaledImageSize();\n        if (xp == undefined) xp = (this.state.crop.width / 2 - this.state.container.left) / scaledSize.width;\n        if (yp == undefined) yp = (this.state.crop.height / 2 - this.state.container.top) / scaledSize.height;\n\n        newScale = this.checkRange(newScale, this.state.minScale, this.getMaxScale());\n        if (newScale !== this.state.scale) {\n            var newScaledSize = this.getScaledImageSize(newScale),\n                xd = Math.round((newScaledSize.width - scaledSize.width) * xp),\n                yd = Math.round((newScaledSize.height - scaledSize.height) * yp),\n                newLeft = this.state.container.left - xd,\n                newTop = this.state.container.top - yd;\n\n            this.updateCropContainerPanZoom(newLeft, newTop, newScale);\n            return true;\n        } else return false;\n    }\n\n    updateScaledImageSize(newScale) {\n        if (this.state.scale !== newScale) {\n            this.state.scale = newScale;\n            var scaledSize = this.getScaledImageSize();\n            \n            this.emit('scaleChanged', {\n                scale: newScale,\n                scaledSize: scaledSize\n            });\n            return true;\n        } else return false;\n    }\n\n    updateCropperFrameSize(newCropHeight, newCropWidth) {\n        var changed = false;\n        \n        if (newCropHeight !== undefined) {\n            this.state.crop.height = parseInt(newCropHeight);\n            changed = true;\n        }\n        if (newCropWidth !== undefined) {\n            this.state.crop.width = parseInt(newCropWidth);\n            changed = true;\n        }\n\n        if (changed) {\n            // Compute new minScale\n            if (this.originalImageSize && this.options.width) {\n                var widthRatio = this.options.width / this.originalImageSize.width,\n                    heightRatio = this.state.crop.height / this.originalImageSize.height,\n                    minScale = Math.max(widthRatio, heightRatio);\n                if (minScale !== this.state.minScale) {\n                    this.state.minScale = minScale;\n                    this.emit('minScaleChanged', { minScale: minScale });\n                }\n            }\n\n            this.emit('cropSizeChanged', {\n                width: this.state.crop.width,\n                height: this.state.crop.height\n            });\n        }\n    }\n\n    updateCropContainerPanZoom(newLeft, newTop, newScale) {\n        var changed = false;\n\n        if (newScale !== undefined) {\n            changed = this.updateScaledImageSize(newScale);\n        }\n\n        var scaledSize = this.getScaledImageSize();\n        \n        // Constraints\n        if (newLeft !== undefined) {\n            newLeft = this.checkRange(newLeft, this.state.crop.width - scaledSize.width, 0);\n            if (this.state.container.left !== newLeft) {\n                this.state.container.left = newLeft;\n                changed = true;\n            }\n        }\n\n        if (newTop !== undefined) {\n            newTop = this.checkRange(newTop, this.state.crop.height - scaledSize.height, 0);\n            if (this.state.container.top !== newTop) {\n                this.state.container.top = newTop;\n                changed = true;\n            }\n        }\n\n        if (changed) {\n            this.emit('containerPositionChanged', {\n                left: this.state.container.left,\n                top: this.state.container.top\n            });\n        }\n\n        return changed;\n    }\n\n    updatePanZoomToFitCropContainer() {\n        // TODO this code is similar to the initializeSizes, maybe we should merge them.\n        var newScale, newLeft, newTop;\n        newScale = this.state.minScale;\n        var resizedSize = this.getScaledImageSize(newScale);\n        newLeft = Math.round((this.state.crop.width - resizedSize.width) / 2);\n        newTop = Math.round((this.state.crop.height - resizedSize.height) / 2);\n        return this.updateCropContainerPanZoom(newLeft, newTop, newScale);\n    }\n\n    updateCropHeightInternal(method, newHeight, origHeight, originalOuterTop, maxHeight) {\n        // Containment. An alternative to \"containment\" would be auto-zooming when reaching the maxHeight (but de-zooming would be counter-intuitive)\n        if (!this.options.autoZoom && newHeight > maxHeight) newHeight = maxHeight;\n\n        newHeight = Math.round(newHeight);\n\n        this.updateCropperFrameSize(newHeight);\n\n        // If we are in a \"basic\" manipulation we want to be sure we stay in \"cover\" mode instead of cropresize.\n        if (method == 'original' || method == 'cover' || method == 'resize') {\n            this.updatePanZoomToFitCropContainer();\n        // This deal with autozoom.\n        } else if (newHeight > maxHeight) {\n            var newScale = newHeight / this.originalImageSize.height;\n            this.updateScale(newScale);\n        } else {\n            // Crop using vertical centering\n            var newOuterTop = Math.round((newHeight - origHeight) / 2) + originalOuterTop;\n            if (newOuterTop > 0) newOuterTop = 0;\n            this.updateCropContainerPanZoom(undefined, newOuterTop);\n        }\n    }\n\n    updateCropHeight(newHeight) {\n        var origHeight = this.state.crop.height;\n        this.updateCropHeightInternal(this.getCurrentComputedMethod(), newHeight, origHeight, this.state.container.top, this.getScaledImageSize().height);\n        return origHeight !== this.state.crop.height;\n    }\n\n    updatePanZoomCropToFitWidthAndAspect() {\n        if (!this.options.width) return false;\n        \n        var newScale = this.options.width / this.originalImageSize.width;\n        var newHeight = Math.round(this.originalImageSize.height * newScale);\n        // TODO maybe we could merge the updateScale in the updateCropHeight call.\n        var changed = this.updateCropHeight(newHeight);\n        changed = this.updateScale(newScale) || changed;\n        return changed;\n    }\n\n    updateSmartAutoResize() {\n        var done = this.updatePanZoomToFitCropContainer();\n        if (!done) {\n            // TODO: This step should be available only when resizer is available.\n            done = this.updatePanZoomCropToFitWidthAndAspect();\n            if (!done) {\n                this.updateScale(1);\n            }\n        }\n        this.emit('modelUpdated', { reason: 'autosize' });\n    }\n\n    initializeSizes() {\n        var newCropHeight, newLeft, newTop, newScale, newWidth;\n\n        // resizeWith, resizeHeight, offsetX, offestY, width and height must be manipulated according to \"ppp\"\n        // crop* instead must not be changed.\n        if (typeof this.options.ppp !== 'undefined') {\n            // console.log(\"ppp\", this.options.ppp, this.options.width, Math.round(this.options.width / this.options.ppp));\n            // TODO when ppp is used we should not overwrite input options but only work on internal variables\n            // but some code still reads input options.\n            this.options.width = Math.round(this.options.width / this.options.ppp);\n            if (typeof this.options.height !== 'undefined') this.options.height = Math.round(this.options.height / this.options.ppp);\n            if (typeof this.options.resizeWidth !== 'undefined') this.options.resizeWidth = Math.round(this.options.resizeWidth / this.options.ppp);\n            if (typeof this.options.resizeHeight !== 'undefined') this.options.resizeHeight = Math.round(this.options.resizeHeight / this.options.ppp);\n            if (typeof this.options.offsetX !== 'undefined') this.options.offsetX = Math.round(this.options.offsetX / this.options.ppp);\n            if (typeof this.options.offsetY !== 'undefined') this.options.offsetY = Math.round(this.options.offsetY / this.options.ppp);\n        }\n\n        if (typeof this.options.resizeWidth !== 'undefined') {\n            // resizecrop\n            newScale = this.options.resizeWidth / this.originalImageSize.width;\n            newCropHeight = this.options.height;\n            newWidth = this.options.width;\n            newLeft = -this.options.offsetX;\n            newTop = -this.options.offsetY;\n        } else if (typeof this.options.cropX2 !== 'undefined' || typeof this.options.cropWidth !== 'undefined') {\n            // cropresize\n            // TODO error reporting for missing mandatory parameters.\n            if (this.options.cropWidth == undefined) this.options.cropWidth = this.options.cropX2 - this.options.cropX;\n            if (this.options.cropHeight == undefined) this.options.cropHeight = this.options.cropY2 - this.options.cropY;\n            if (this.options.cropX == undefined) this.options.cropX = 0;\n            if (this.options.cropY == undefined) this.options.cropY = 0;\n            newScale = this.options.width / this.options.cropWidth;\n            newCropHeight = this.options.height || this.options.cropHeight * newScale;\n            newWidth = this.options.width;\n            newLeft = Math.round(-this.options.cropX * newScale);\n            newTop = Math.round(-this.options.cropY * newScale);\n        } else if (typeof this.options.height !== 'undefined') {\n            // cover\n            newScale = Math.max(this.options.width / this.originalImageSize.width, this.options.height / this.originalImageSize.height);\n            newWidth = Math.min(this.options.width, Math.round(this.originalImageSize.width * newScale));\n            newCropHeight = Math.min(this.options.height, Math.round(this.originalImageSize.height * newScale));\n            var resizedSize = this.getScaledImageSize(newScale);\n            newLeft = Math.round((newWidth - resizedSize.width) / 2);\n            newTop = Math.round((newCropHeight - resizedSize.height) / 2);\n        } else if (typeof this.options.width) {\n            // resize\n            newScale = this.options.width / this.originalImageSize.width;\n            newCropHeight = Math.round(this.originalImageSize.height * newScale);\n            newWidth = this.options.width;\n            newLeft = 0;\n            newTop = 0;\n        } else {\n            // TODO error reporting unexpected parameters\n        }\n\n        this.updateCropperFrameSize(newCropHeight, newWidth);\n        this.updateCropContainerPanZoom(newLeft, newTop, newScale);\n        // Note: updateCropperMethod() will be called by the main widget\n    }\n}","// Importa le nuove funzioni di gestione URL\r\nimport { urlAdapterFromSrc, urlAdapterToSrc } from './url-adapters.js';\r\n// Importa il modello di cropping\r\nimport { CropModel } from './crop-model.js';\r\n\r\n(function($) {\r\n\r\n  $.widget(\"mosaico.mosaicoCropper\", {\r\n\r\n    options: {\r\n        autoClose: true,\r\n        shiftWheel: false,\r\n    },\r\n\r\n    _init: function() {\r\n        if (this.options.instance !== undefined) {\r\n            this.options.instance.dispose(true);\r\n        }\r\n        this.options.instance = mosaicoCropper(this.element.get(0), this.options, this);\r\n    },\r\n\r\n    scale: function(value) {\r\n        if (value === undefined) {\r\n            return this.options.instance.getScale();\r\n        } else {\r\n            this.options.instance.updateScale(value);\r\n        }\r\n    },\r\n\r\n    cropHeight: function(value) {\r\n        if (value === undefined) {\r\n            return this.options.instance.getCropHeight();\r\n        } else {\r\n            this.options.instance.updateCropHeight(value);\r\n        }\r\n    },\r\n\r\n    _destroy: function() {\r\n        this.options.instance.dispose(true);\r\n    },\r\n\r\n  });\r\n\r\nfunction mosaicoCropper(imgEl, options, widget) {\r\n\r\n    var htmlTemplate = '<div class=\"mo-cropper cropper-hidden\" tabindex=\"-1\">'+\r\n      '<div class=\"cropper-frame\">'+\r\n        '<div class=\"clipping-container\">'+\r\n          '<div class=\"toolbar\">'+\r\n            '<div class=\"tool tool-zoom\"><i class=\"fa fa-compress\" aria-hidden=\"true\"></i></div>'+\r\n            '<div class=\"copper-zoom-slider\"></div>'+\r\n            '<div class=\"tool tool-crop\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></div>'+\r\n          '</div>'+\r\n          '<img draggable=\"false\" class=\"clipped clipped-image original-src\">'+\r\n        '</div>'+\r\n        // '<div class=\"clip-handle ui-resizable-s\"></div>'+\r\n      '</div>'+\r\n      '<div class=\"outer-image-container\">'+\r\n        '<img class=\"outer-image original-src\">'+\r\n      '</div>'+\r\n    '</div>';\r\n\r\n    /** GETTERS **/\r\n\r\n    function getScaledImageSize(scale) {\r\n        return cropModel.getScaledImageSize(scale);\r\n    }\r\n\r\n    function getCropHeight() {\r\n        return cropModel.getCropHeight();\r\n    }\r\n\r\n    function getScale() {\r\n        return cropModel.getScale();\r\n    }\r\n\r\n    function getMaxScale() {\r\n        return cropModel.getMaxScale();\r\n    }\r\n\r\n\r\n    /** UTILITIES **/\r\n\r\n    var movingTimeout = false;\r\n    var isMoving = false;\r\n\r\n    function addMovingClass(className) {\r\n        if (movingTimeout) clearTimeout(movingTimeout);\r\n        if (!isMoving) {\r\n            rootEl.addClass(\"cropper-moving\");\r\n            rootEl.addClass(\"cropper-moving-\"+className);\r\n            isMoving = className;\r\n        }\r\n    }\r\n    function removeMovingClass() {\r\n        if (movingTimeout) clearTimeout(movingTimeout);\r\n        if (isMoving) {\r\n            rootEl.removeClass(\"cropper-moving\");\r\n            rootEl.removeClass(\"cropper-moving-\"+isMoving);\r\n            isMoving = false;\r\n        }\r\n    }\r\n\r\n    function toggleMovingClass(className) {\r\n        if (isMoving) removeMovingClass();\r\n        else addMovingClass(className);\r\n    }\r\n\r\n\r\n\r\n    function checkRange(value, min, max) {\r\n        return cropModel.checkRange(value, min, max);\r\n    }\r\n\r\n\r\n    /** INITIALIZATION METHODS */\r\n\r\n    // TODO make this method parametrizable so to take a direction (down vs right)\r\n    function initializeResizer() { // g\r\n        var originalOuterTop;\r\n        var maxHeight;\r\n        var originalMethod;\r\n\r\n        cropperFrameEl.append('<div class=\"clip-handle ui-resizable-s\"></div>');\r\n        cropperFrameEl.resizable({\r\n            minHeight: 40,\r\n            handles: { s: '.clip-handle' },\r\n            /* containment: outerEl, */ /* se voglio fare che il resize sposta sul centro non posso usare il containment */\r\n            start: function(event, ui) {\r\n                rootEl.focus();\r\n                addMovingClass('handle');\r\n                originalOuterTop = cropModel.state.container.top;\r\n                originalMethod = cropModel.getCurrentComputedMethod();\r\n                maxHeight = cropModel.getScaledImageSize().height;\r\n            },\r\n            stop: function(event, ui) {\r\n                removeMovingClass();\r\n                changed(\"resized\");\r\n            },\r\n            resize: function(event, ui) {\r\n                var topDiff = cropModel.state.container.top - originalOuterTop;\r\n                cropModel.updateCropHeightInternal(originalMethod, ui.size.height, ui.originalSize.height, originalOuterTop, maxHeight);\r\n                changed(\"resizing\");\r\n                ui.size.height = cropModel.state.crop.height;\r\n                if (typeof widget !== 'undefined') widget._trigger('cropheight', null, { value: cropModel.getCropHeight() });\r\n            },\r\n        });\r\n        cropperFrameEl.find('.clip-handle').on(\"dblclick\", function(event) {\r\n            cropModel.updateCropHeight(cropModel.getScaledImageSize().height);\r\n            changed(\"resized\");\r\n            return false;\r\n        });\r\n    }\r\n\r\n    function initializeDraggable() { // h\r\n        imageCropContainerEl.draggable({\r\n            scroll: false, // TODO not sure it is better with false. Need some testing.\r\n            start: function(event, ui) {\r\n                rootEl.focus();\r\n                addMovingClass('drag');\r\n            },\r\n            stop: function(event, ui) {\r\n                changed(\"dragged\");\r\n                removeMovingClass();\r\n            },\r\n            drag: function(event, ui) {\r\n                cropModel.updateCropContainerPanZoom(Math.round(ui.position.left), Math.round(ui.position.top));\r\n                ui.position.left = cropModel.state.container.left;\r\n                ui.position.top = cropModel.state.container.top;\r\n                changed(\"dragging\");\r\n            },\r\n        }).on(\"wheel\", function(event) {\r\n            if (options.shiftWheel && !event.shiftKey) return true;\r\n\r\n            var delta = -event.originalEvent.deltaY;\r\n            rootEl.focus();\r\n\r\n            if (delta !== 0) {\r\n                addMovingClass('wheel');\r\n                movingTimeout = setTimeout(removeMovingClass, 500);\r\n\r\n                var scaledSize = cropModel.getScaledImageSize();\r\n                // console.log(event.originalEvent.layerX, event.originalEvent.offsetX, event.originalEvent.layerX | event.originalEvent.offsetX);\r\n                var xp = event.originalEvent.offsetX / scaledSize.width;\r\n                var yp = event.originalEvent.offsetY / scaledSize.height;\r\n\r\n                var newScale = delta > 0 ? cropModel.getScale()*1.1 : (cropModel.getScale()/1.1);\r\n                cropModel.updateScale(newScale, xp, yp);\r\n                changed(\"wheel\");\r\n            }\r\n\r\n            return false;\r\n        }).on(\"dblclick\", function(event) {\r\n            // TODO temporary added the functionality to doubleclick\r\n            cropModel.updateSmartAutoResize();\r\n            return false;\r\n        }).on(\"click\", function(event) {\r\n            rootEl.focus();\r\n            toggleMovingClass('click');\r\n        });\r\n    }\r\n\r\n    /* Make the slider zoom binding logaritmic so to have more precision on the left side of the slider */\r\n    function _fromSliderValueToScale(value) {\r\n        return Math.pow(1.03, value) / 100;\r\n    }\r\n\r\n    function _fromScaleToSliderValue(scale) {\r\n        return Math.log(scale * 100) / Math.log(1.03);\r\n    }\r\n\r\n    function initializeSlider() {\r\n        // SLIDER\r\n        sliderEl.slider({\r\n            min: Math.floor(_fromScaleToSliderValue(cropModel.state.minScale)),\r\n            step: 1,\r\n            value: Math.round(_fromScaleToSliderValue(cropModel.getScale())),\r\n            max: Math.ceil(_fromScaleToSliderValue(cropModel.getMaxScale())), // zoom 2 means the output image will be very low quality (4 pixels from 1 original pixel)\r\n            slide: function(event, ui) {\r\n                var newScale = _fromSliderValueToScale(ui.value);\r\n                cropModel.updateScale(newScale);\r\n                changed(\"slide\");\r\n                ui.value = _fromScaleToSliderValue(cropModel.getScale());\r\n            },\r\n            start: function() {\r\n                addMovingClass('slide');               \r\n            },\r\n            stop: function() {\r\n                removeMovingClass('slide');               \r\n            },\r\n        });\r\n    }\r\n\r\n    function initialize() {\r\n    \tif (containerEl) containerEl.addClass(\"cropper-cropping\");\r\n\r\n\r\n        if (options.autoClose !== false) {\r\n            rootEl.focusout(function(a) {\r\n                // On ie11 we have to use the contains method to check for real \"focusout\" events.\r\n                if ((a.relatedTarget == null || !rootEl.get(0).contains(a.relatedTarget)) && typeof a.delegatedTarget == 'undefined' && !disposing) {\r\n                    updateAndDispose();\r\n                }\r\n            });\r\n        }\r\n\r\n        rootEl.find('.tool-crop').on(\"click\", function() {\r\n            updateAndDispose();\r\n            // rootEl.triggerHandler('focusout');\r\n        });\r\n\r\n        rootEl.find('.tool-zoom').on(\"click\", function() {\r\n            cropModel.updateSmartAutoResize();\r\n        });\r\n\r\n        rootEl.focus();\r\n\r\n        cropModel.initializeSizes();\r\n        updateCropperMethod();\r\n        // TODO parametrize vertical resizer presence (note that also the zoom button is currently allowed to change the cropHeight and should be changed according to the presence of the cropper)\r\n        initializeResizer();\r\n        initializeDraggable();\r\n        initializeSlider();\r\n\r\n        // initialized\r\n        $(imgEl).css(\"display\", \"none\");\r\n\r\n        rootEl.css(\"display\", origDisplay == 'inline' ? 'inline-block' : origDisplay);\r\n        rootEl.removeClass(\"cropper-hidden\");\r\n\r\n        rootEl.focus();\r\n\r\n        if (typeof widget !== 'undefined') widget._trigger('copperready');\r\n    }\r\n\r\n    var lastMethod;\r\n\r\n    function updateCropperMethod() {\r\n        var ccsMethod = cropModel.getCurrentComputedMethod();\r\n        // console.log(\"CURRENT METHOD\", ccs.method);\r\n        if (lastMethod !== ccsMethod) {\r\n            rootEl.removeClass(\"cropper-method-\"+lastMethod);\r\n            lastMethod = ccsMethod;\r\n            rootEl.addClass(\"cropper-method-\"+lastMethod);\r\n        }\r\n    }\r\n\r\n    function changed() { // n\r\n        updateCropperMethod();\r\n        rootEl.addClass(\"cropper-has-changes\");\r\n    }\r\n\r\n    // NOTA: _stringTemplate è stato spostato in url-adapters.js\r\n\r\n    function getCurrentComputedMethod() {\r\n        return cropModel.getCurrentComputedMethod();\r\n    }\r\n\r\n    function getCurrentComputedSizes() {\r\n        return cropModel.getCurrentComputedSizes();\r\n    }\r\n\r\n    function updateOriginalImageSrc(done, fail) { // n\r\n        try {\r\n            var res = getCurrentComputedSizes();\r\n            var url = urlAdapterToSrc(options.urlAdapter, options, res);\r\n\r\n            rootEl.addClass(\"cropper-loading\");\r\n\r\n            preloadImage(url, function(img, src) {\r\n                $(imgEl).attr('src', src);\r\n                // not needed, as we're going to remove the whole element.\r\n                rootEl.removeClass(\"cropper-loading\");\r\n                done();\r\n            }, function(err) {\r\n                rootEl.removeClass(\"cropper-loading\");\r\n                rootEl.addClass(\"cropper-has-changes\");\r\n                fail();\r\n            });\r\n\r\n            rootEl.removeClass(\"cropper-has-changes\");\r\n\r\n            if (options.imgLoadingClass) $(imgEl).removeClass(options.imgLoadingClass);\r\n        } catch (error) {\r\n            console.error(\"Failed generating final URL\", error);\r\n            // if something gone wrong, call fail callback.\r\n            fail();\r\n        }\r\n    }\r\n\r\n    function updateAndDispose() {\r\n        if (!closing) {\r\n            closing = true;\r\n            updateOriginalImageSrc(dispose, function() { \r\n                // TODO what should we do when saving fails?\r\n                // TODO logging\r\n                dispose();\r\n                closing = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    function dispose(noCallback) {\r\n        if (disposing) return;\r\n        else disposing = true;\r\n\r\n        if (containerEl) containerEl.removeClass(\"cropper-cropping\");\r\n\r\n        try {\r\n            cropperFrameEl.find('.clip-handle').remove();\r\n            cropperFrameEl.resizable(\"destroy\");\r\n            imageCropContainerEl.draggable(\"destroy\");\r\n            sliderEl.slider(\"destroy\");\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n        rootEl.remove();\r\n\r\n        if (options.imgLoadingClass) $(imgEl).removeClass(options.imgLoadingClass);\r\n\r\n        // rootEl.addClass(\"cropper-hidden\");\r\n        $(imgEl).css(\"display\", origDisplay);\r\n\r\n        if (!noCallback && typeof widget !== 'undefined') widget.destroy();\r\n    }\r\n\r\n    function preloadImage(src, done, error) {\r\n        var img = new Image();\r\n        img.onload = function() {\r\n            done(img, src);\r\n        };\r\n        img.onerror = function(err) {\r\n            // TODO error reporting.\r\n            console.log(\"TODO img preload failed\", err);\r\n            if (error) error(src);\r\n        };\r\n        img.src = src;\r\n    }\r\n\r\n\r\n    var rootEl = $(htmlTemplate);\r\n\r\n    $(imgEl).before(rootEl);\r\n    if (options.imgLoadingClass) $(imgEl).addClass(options.imgLoadingClass);\r\n\r\n    var urlData = urlAdapterFromSrc(options.urlAdapter, options, imgEl.src);\r\n\r\n    $.extend(options, urlData);\r\n    if (!options.width) {\r\n        // TODO maybe I have to use the original size instead of the options\r\n        options.width = imgEl.width;\r\n        options.height = imgEl.height;\r\n    }\r\n\r\n    // TODO we only support 1:1 aspect ratios.\r\n    var wr = options.width / imgEl.width;\r\n    var hr = options.height ? options.height / imgEl.height : wr;\r\n    if (Math.abs(wr / hr - 1) > 0.01) {\r\n        console.error(\"Unexpected aspect ratio: \", options.width, options.height, imgEl.width, imgEl.height, wr, hr);\r\n    }\r\n    // image pixels per image \"html\" size (so to support 2x 3x retina crops)\r\n    options.ppp = wr;\r\n\r\n\r\n    var thisVar = this,\r\n        clippedEl = rootEl.find(\".clipped\"),\r\n        cropperFrameEl = rootEl.find(\".cropper-frame\"),\r\n        imageCropContainerEl = rootEl.find(\".outer-image-container\"),  // (b.find(\".hidden-image\"),    // u\r\n        sliderEl = rootEl.find('.copper-zoom-slider'),\r\n        origDisplay = $(imgEl).css(\"display\"),\r\n        disposing = false,\r\n        closing = false,\r\n        originalImageSize;\r\n\r\n\r\n    var containerEl = false;\r\n    if (typeof options.containerSelector !== 'undefined') {\r\n        containerEl = $(options.containerSelector);\r\n    }\r\n\r\n    // CropModel will be initialized later with complete data\r\n    var cropModel;\r\n\r\n    var fullOriginalImgUrl = options.urlOriginal || (options.urlPrefix || '')+(options.urlPostfix || '');\r\n\r\n    // if the fullOriginalImgUrl doesn't have a scheme, prepend http:// (cloudimage likes this)\r\n    if (!fullOriginalImgUrl.match(/[a-z]+:/)) fullOriginalImgUrl = 'http://'+fullOriginalImgUrl;\r\n\r\n    preloadImage(fullOriginalImgUrl, function(img, src) {\r\n        rootEl.find(\".original-src\").attr('src', src);\r\n        originalImageSize = {\r\n            width: img.naturalWidth,\r\n            height: img.naturalHeight\r\n        };\r\n        \r\n        // Initialize the CropModel with complete data\r\n        cropModel = new CropModel(options, originalImageSize);\r\n\r\n        // Setup event handlers\r\n        cropModel.on('scaleChanged', function(data) {\r\n            var newSizes = {\r\n                width: data.scaledSize.width+\"px\",\r\n                height: data.scaledSize.height+\"px\"\r\n            };\r\n            clippedEl.css(newSizes);\r\n            imageCropContainerEl.css(newSizes);\r\n            sliderEl.slider(\"value\", _fromScaleToSliderValue(data.scale));\r\n            changed(\"scaleChanged\");\r\n        });\r\n        cropModel.on('containerPositionChanged', function(data) {\r\n            var newSizes = {\r\n                left: data.left+\"px\",\r\n                top: data.top+\"px\"\r\n            };\r\n            imageCropContainerEl.css(newSizes);\r\nclippedEl.css(newSizes);\r\n            changed(\"containerPositionChanged\");\r\n        });\r\n        cropModel.on('cropSizeChanged', function(data) {\r\n            cropperFrameEl.css({ \r\n                height: data.height+\"px\", \r\n                width: data.width+\"px\" \r\n            });\r\n            if (data.width !== undefined) {\r\n                rootEl.css({ width: data.width+\"px\" });\r\n            }\r\n            changed(\"cropSizeChanged\");\r\n        });\r\n        cropModel.on('minScaleChanged', function(data) {\r\n            sliderEl.slider({ min: _fromScaleToSliderValue(data.minScale) });\r\n            changed(\"minScaleChanged\");\r\n        });\r\n        cropModel.on('modelUpdated', function(data) {\r\n            changed(data.reason);\r\n        });\r\n        \r\n        // initialize.call(thisVar);\r\n        initialize();\r\n    }, function(src) {\r\n        // TODO handle initialization error\r\n        setTimeout(dispose);\r\n    });\r\n\r\n    return {\r\n        getScale: function() { return cropModel.getScale(); },\r\n        updateScale: function(value, xp, yp) { return cropModel.updateScale(value, xp, yp); },\r\n        getCropHeight: function() { return cropModel.getCropHeight(); },\r\n        updateCropHeight: function(value) { return cropModel.updateCropHeight(value); },\r\n        dispose: dispose,\r\n    };\r\n\r\n}\r\n\r\n}(jQuery));\r\n"],"names":["_urlParserPatterns","encodedUrlOriginal","width","height","resizeWidth","resizeHeight","offsetX","offsetY","cropWidth","cropHeight","cropX","cropY","cropX2","cropY2","methods","_urlParser","pattern","customPatterns","url","matchNames","regex","RegExp","replace","match","braket","groupName","subPattern","offset","input_string","push","innerMatch","innerBraket","console","error","res","matches","length","log","i","_stringTemplate","string","obj","contents","hasOwnProperty","CropModel","constructor","options","originalImageSize","Error","this","state","container","left","top","crop","scale","minScale","listeners","on","event","callback","emit","data","forEach","getCropHeight","getScale","getMaxScale","maxScale","getScaledImageSize","Math","round","checkRange","value","min","max","getCurrentComputedMethod","getCurrentComputedSizes","method","scaledSize","l","r","t","b","ppp","ceil","_scale","dx","abs","dy","updateScale","newScale","xp","yp","newScaledSize","xd","yd","newLeft","newTop","updateCropContainerPanZoom","updateScaledImageSize","updateCropperFrameSize","newCropHeight","newCropWidth","changed","parseInt","widthRatio","heightRatio","updatePanZoomToFitCropContainer","resizedSize","updateCropHeightInternal","newHeight","origHeight","originalOuterTop","maxHeight","autoZoom","newOuterTop","updateCropHeight","updatePanZoomCropToFitWidthAndAspect","updateSmartAutoResize","done","reason","initializeSizes","newWidth","$","jQuery","widget","autoClose","shiftWheel","_init","instance","dispose","imgEl","lastMethod","movingTimeout","isMoving","addMovingClass","className","rootEl","addClass","removeMovingClass","removeClass","toggleMovingClass","initializeResizer","originalMethod","cropperFrameEl","append","resizable","minHeight","handles","s","start","ui","focus","cropModel","stop","resize","size","originalSize","_trigger","find","initializeDraggable","imageCropContainerEl","draggable","scroll","drag","position","shiftKey","delta","originalEvent","deltaY","setTimeout","_fromSliderValueToScale","pow","_fromScaleToSliderValue","initializeSlider","sliderEl","slider","floor","step","slide","initialize","containerEl","focusout","a","relatedTarget","get","contains","delegatedTarget","disposing","updateAndDispose","updateCropperMethod","css","origDisplay","ccsMethod","updateOriginalImageSrc","fail","urlAdapter","urlData","urlPrefix","urlPostfix","urlOriginal","encodeURIComponent","toSrc","indexOf","bind","urlAdapterToSrc","preloadImage","img","src","attr","err","imgLoadingClass","closing","noCallback","remove","destroy","Image","onload","onerror","before","fromSrc","patterns","p","composedPattern","join","origFromSrc","urlAdapterResult","decodeURIComponent","defaultPrefix","urlAdapterFromSrc","extend","wr","hr","clippedEl","containerSelector","fullOriginalImgUrl","naturalWidth","naturalHeight","newSizes","mosaicoCropper","element","_destroy"],"mappings":"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"}